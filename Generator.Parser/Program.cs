using Generator.CustomTypeBuilder.Services;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace Generator.Parser
{
    class Program
    {
        static List<object> mappedRows;

        static void Main(string[] args)
        {
            //GENERATE DINAMYC CLASSES
            string json = "[{'channel':'1','type':'array','elements':[{'fieldName':'Canal_1','type':'string','position':0,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Nombre','type':'string','position':1,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'Direccion','type':'string','position':2,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Barrio','type':'string','position':3,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Ciudad','type':'string','position':4,'functions':[{'name':'Split','params':{'splitCharacter':'-','splitPosition':0}},{'name':'TrimSpaces','params':{}}]},{'fieldName':'Departamento','type':'string','position':4,'functions':[{'name':'Split','params':{'splitCharacter':'-','splitPosition':1}},{'name':'TrimSpaces','params':{}}]},{'fieldName':'FechaCorte','type':'string','position':5,'functions':[{'name':'TrimSpaces','params':{}},{'name':'DateFormat','params':{'inputDateFormat':'yyyyMMdd','outputDateFormat':'yyyy/MM/dd'}}]},{'fieldName':'NumeroTarjeta','type':'string','position':6,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'NumeroObligacion','type':'string','position':7,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'CupoTotal','type':'string','position':8,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CupoDisponible','type':'string','position':9,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CupoAvance','type':'string','position':10,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'FechaLimitePago','type':'string','position':11,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'PagoMinimo','type':'string','position':12,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'PagoTotal','type':'string','position':13,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CuentaDebitoautomatico','type':'string','position':14,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'TarjetaPago','type':'string','position':15,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'TipoCartera','type':'string','position':16,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'DiasMora','type':'string','position':17,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'VisualizaAhorro','type':'bool','position':18,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'TotalAhorro','type':'string','position':19,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'Puntos','type':'string','position':20,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'CorreoElectronico','type':'string','position':21,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'NumeroIdentificacion','type':'string','position':22,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'IndicaImpresion','type':'string','position':23,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'IdUnico','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'NumeroTarjeta'}}]},{'fieldName':'Factura','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'NumeroTarjeta'}}]},{'fieldName':'TarjetaEncrypt','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'NumeroTarjeta'}},{'name':'Encrypt','params':{'encryptLast':false,'charToEncrypt':'+','lengthUnencrypted':4}}]},{'fieldName':'BinTarjeta','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'NumeroTarjeta'}},{'name':'SubstringValues','params':{'initialPosition':0,'quantityCharacters':7}},{'name':'GetEquivalentRule','params':{'data':'BinTarjeta','defaultValue':''}}]},{'fieldName':'TipoTarjeta','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'BinTarjeta'}},{'name':'GetEquivalentRule','params':{'data':'TipoTarjeta','defaultValue':''}}]},{'fieldName':'SegmentoTarjeta','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'BinTarjeta'}},{'name':'GetEquivalentRule','params':{'data':'SegmentoTarjeta','defaultValue':''}}]},{'fieldName':'Sucursal','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'FechaCorte'}}]},{'fieldName':'Nit','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'NumeroObligacion'}}]},{'fieldName':'FechaPago','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'FechaLimitePago'}},{'name':'GetPayDate','params':{}}]},{'fieldName':'EnvioMail','type':'string','position':21,'functions':[{'name':'GetValue','params':{'getValue':'CorreoElectronico'}},{'name':'NotNull','params':{}}]},{'fieldName':'Channel','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'IndicaImpresion'}},{'name':'GetEquivalentRule','params':{'data':'Channel','defaultValue':''}},{'name':'AddChannel','params':{}}]},{'fieldName':'CopySMS','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'BinTarjeta'}},{'name':'GetEquivalentRule','params':{'data':'CopySMS','defaultValue':''}},{'name':'Replace','params':{}}]},{'fieldName':'ChannelPE','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'ChannelPE','defaultValue':'ChannelPE'}},{'name':'AddChannel','params':{}}]},{'fieldName':'ComprasMesVencido','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'ComprasMesVencido'}}]},{'fieldName':'ComprasEA','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'ComprasEA'}}]},{'fieldName':'AvancesMesVencido','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'AvancesMesVencido'}}]},{'fieldName':'AvancesEA','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'AvancesEA'}}]},{'fieldName':'MoraMesVencido','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'MoraMesVencido'}}]},{'fieldName':'MoraEA','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'Tasas','defaultValue':'MoraEA'}}]},{'fieldName':'CodigoBarras','type':'string','position':-1,'functions':[{'name':'GetEquivalentRule','params':{'data':'CodigoBarras','defaultValue':'EAN'}}]},{'fieldName':'PreimpresoTiro','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'PreimpresoTiro'}},{'name':'GetResource','params':{}}]},{'fieldName':'PreimpresoRetiro','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'PreimpresoRetiro'}},{'name':'GetResource','params':{}}]},{'fieldName':'PreimpresoDetalles','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'PreimpresoDetalles'}},{'name':'GetResource','params':{}}]},{'fieldName':'PreimpresoCostos','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'PreimpresoCostos'}},{'name':'GetResource','params':{}}]},{'fieldName':'PreimpresoDorsoCostos','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'PreimpresoDorsoCostos'}},{'name':'GetResource','params':{}}]},{'fieldName':'ImagenInmediato','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'ImagenInmediato'}},{'name':'GetResource','params':{}}]},{'fieldName':'MediosDePago','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'MediosDePago'}},{'name':'GetResource','params':{}}]},{'fieldName':'SolapaAhorro','type':'string','position':-1,'functions':[{'name':'SetValue','params':{'setValue':'SolapaAhorro'}},{'name':'GetResource','params':{}}]},{'fieldName':'NombrePDF','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'FechaCorte'}},{'name':'ReplaceChar','params':{'charToReplace':'/','newChar':''}},{'name':'ConcatenatePropValues','params':{'properties':['NombrePDF','NumeroTarjeta'],'separator':'_'}}]},{'channel':'4','type':'array','elements':[{'fieldName':'Canal_4','type':'string','position':0,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Fecha','type':'string','position':1,'functions':[{'name':'TrimSpaces','params':{}},{'name':'DateFormat','params':{'inputDateFormat':'yyyyMMdd','outputDateFormat':'yyyy/MM/dd'}}]},{'fieldName':'Almacen','type':'string','position':2,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Descripcion','type':'string','position':3,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'ValorTransaccion','type':'string','position':4,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'SaldoPendiente','type':'string','position':5,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CuotaPagarMes','type':'string','position':6,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'TasasInteresTransaccion','type':'string','position':7,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CuotaTotal','type':'int','position':8,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'CuotasCobradas','type':'int','position':9,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'CuotasPendientes','type':'string','position':10,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'CodigoSecuencia','type':'string','position':11,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'AhorroTransaccion','type':'string','position':12,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'Ahorro','type':'double','position':-1,'functions':[{'name':'SubstractDates','params':{'properties':['Fecha','FechaCorte'],'culture':'es-ES'}}]},{'fieldName':'ValidaAhorro','type':'bool','position':-1,'functions':[{'name':'LessThan','params':{'value1':'Ahorro','value2':30}}]}]},{'channel':'7','type':'object','elements':[{'fieldName':'Canal_7','type':'string','position':0,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'AbonoCapitalMinimo','type':'string','position':1,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'InteresCorrienteMinimo','type':'string','position':2,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CuotaManejoMinimo','type':'string','position':3,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'PolizaDeudoresMinimo','type':'string','position':4,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CobroAvancesMinimo','type':'string','position':5,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'OtrosMinimo','type':'string','position':6,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'ValorCuotaMinimo','type':'string','position':7,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'InteresMoraMinimo','type':'string','position':8,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'SaldoMoraMinimo','type':'string','position':9,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'PagoMinimo','type':'string','position':10,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'SaldoPendienteTotal','type':'string','position':11,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'InteresCorrienteTotal','type':'string','position':12,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CuotaManejoTotal','type':'string','position':13,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'PolizaDeudoresTotal','type':'string','position':14,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'CobroAvancesTotal','type':'string','position':15,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'OtrosTotal','type':'string','position':16,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'InteresMoraTotal','type':'string','position':17,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'PagoTotal','type':'bool','position':18,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'LineaServicioMinimo','type':'string','position':19,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'LineaServicioTotal','type':'string','position':20,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'Compras','type':'string','position':21,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]},{'fieldName':'Pagos','type':'string','position':22,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NumericalFormat','params':{'culture':'is-IS','decimalCount':2}}]}]},{'channel':'10','type':'object','elements':[{'fieldName':'Canal_10','type':'string','position':0,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'Mensajes','type':'string','position':1,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'Observaciones','type':'string','position':2,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'ImagenSolapa','type':'string','position':3,'functions':[{'name':'TrimSpaces','params':{}},{'name':'SetValue','params':{'setValue':'ImagenSolapa'}},{'name':'GetResource','params':{}},{'name':'ReplaceEmpty','params':{'value':'0000'}}]},{'fieldName':'MensajeAlterno','type':'string','position':4,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'SolapaTiro','type':'string','position':5,'functions':[{'name':'TrimSpaces','params':{}},{'name':'SetValue','params':{'setValue':'SolapaTiro'}},{'name':'GetResource','params':{}},{'name':'ReplaceEmpty','params':{'value':'0000'}}]},{'fieldName':'ImagenTiroSolapa','type':'string','position':6,'functions':[{'name':'TrimSpaces','params':{}},{'name':'SetValue','params':{'setValue':'ImagenTiroSolapa'}},{'name':'GetResource','params':{}},{'name':'ReplaceEmpty','params':{'value':'0000'}}]},{'fieldName':'ImagenPubliRetiro','type':'string','position':7,'functions':[{'name':'TrimSpaces','params':{}},{'name':'SetValue','params':{'setValue':'ImagenPubliRetiro'}},{'name':'GetResource','params':{}},{'name':'ReplaceEmpty','params':{'value':'0000'}}]},{'fieldName':'SolapaSelectivo','type':'string','position':8,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'CampaniasInfoPersona','type':'string','position':9,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'TipoBannerRetiro','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'ImagenTiroSolapa'}}]},{'fieldName':'Mensaje','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'MensajeAlterno'}},{'name':'SubstringValues','params':{'initialPosition':6,'quantityCharacters':4}}]},{'fieldName':'Observacion','type':'string','position':-1,'functions':[{'name':'GetValue','params':{'getValue':'Observaciones'}},{'name':'SubstringValues','params':{'initialPosition':6,'quantityCharacters':4}}]}]},{'channel':'11','type':'object','elements':[{'fieldName':'Canal_11','type':'string','position':0,'functions':[{'name':'TrimSpaces','params':{}},{'name':'NotNull','params':{}}]},{'fieldName':'CodigotypeExtracto','type':'string','position':1,'functions':[{'name':'TrimSpaces','params':{}}]},{'fieldName':'NombretypeExtracto','type':'string','position':2,'functions':[{'name':'TrimSpaces','params':{}}]}]}]}]";
            dynamic deserializedJson = JsonConvert.DeserializeObject<List<ExpandoObject>>(json, new ExpandoObjectConverter());
            var mainClassGenerated = ClassGeneratorServices.CreateCustomClass(deserializedJson);

            //READ FILE
            string filePath = "D:\\Datos\\Tuya\\mastercard\\SpoolDatos_ExtractosTarjetaMasterCard-20200519.txt"; 
            List<string> lines = new List<string>(); //only allocate memory here
            using (StreamReader sr = File.OpenText(filePath))
            {
                while (!sr.EndOfStream)
                {
                    lines.Add(sr.ReadLine());
                }
            }
            lines = lines.Where(l => !string.IsNullOrEmpty(l)).ToList(); //Remove empty lines
            //Use the parallel processing technique
            Parallel.For(0, lines.Count, index =>
            {
                //Here call methods 
                Mapeo(lines[index]);
            });
            Console.ReadLine();
        }

        static void Mapeo(string line)
        {
            mappedRows = new List<object>();
            //From DB
            string identifier = "1";
            string separator = "|";
            int identifierPosition = 0;
            
            int instanceCreatedCounter = 0;
            bool isArray;
            string prevIdentifierProcessed = "";
            object instance = null;
            List<object> listTemp = null;

            var valuesRead = line.Split(separator);
            var key = valuesRead[identifierPosition].Trim();

            var config = ClassGeneratorServices.SpecificConfig
                            .Where(cfg => cfg.Key == key)
                            .FirstOrDefault();

            var classToUse = ClassGeneratorServices.GeneratedClasses
                                .Where(ins => ins.GetType().Name == config.ObjectName)
                                .FirstOrDefault();

            if (config.ObjectType.Equals("array"))
            {
                isArray = true;
                prevIdentifierProcessed = key;
                listTemp = new List<object>();
            }
            else
            {
                isArray = false;
            }

            config.Properties.ForEach(prop =>
            {
                CreateInstance(instance, classToUse);
            });

        }


        static void CreateInstance(object instance, object classToInstance)
        {
            if (instance == null)
            {
                instance = GetInstance(classToInstance);
            }
        }

        static object GetInstance (object instance)
        {
            Type instanceType = instance.GetType();
            return Activator.CreateInstance(instanceType);
        }
    }
}
